version: '3.8'

services:
  # Frontend Next.js
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NEXT_PUBLIC_THIRDWEB_CLIENT_ID=${NEXT_PUBLIC_THIRDWEB_CLIENT_ID}
      - NEXT_PUBLIC_ENGINE_URL=http://engine:3005
    depends_on:
      - backend
      - engine
    restart: unless-stopped
    networks:
      - app-network

  # Backend Python FastAPI (AI Generation)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MONGODB_URI=${MONGODB_URI}
      - CLOUDINARY_URL=${CLOUDINARY_URL}
      - PINATA_API_KEY=${PINATA_API_KEY}
      - PINATA_SECRET_KEY=${PINATA_SECRET_KEY}
    volumes:
      - ./api:/app/api
      - ai_models:/app/models
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - app-network

  # Thirdweb Engine (Gasless Transactions)
  engine:
    image: thirdweb/engine:latest
    ports:
      - "3005:3005"
    environment:
      # Database
      - DATABASE_URL=postgresql://engine:engine_password@postgres:5432/engine
      
      # Thirdweb Configuration
      - THIRDWEB_API_SECRET_KEY=${THIRDWEB_API_SECRET_KEY}
      - ENGINE_URL=http://localhost:3005
      - ADMIN_WALLET_ADDRESS=${ADMIN_WALLET_ADDRESS}
      - ACCESS_CONTROL_ALLOW_ORIGIN=*
      
      # Backend Wallets (for gasless transactions)
      - ENABLE_HTTPS=false
      - LOG_LEVEL=debug
      
    depends_on:
      - postgres
    restart: unless-stopped
    volumes:
      - engine_data:/app/data
    networks:
      - app-network

  # MongoDB (Main Database)
  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE:-chiliz_fan_nft}
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - app-network

  # PostgreSQL (Thirdweb Engine Database)
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=engine
      - POSTGRES_USER=engine
      - POSTGRES_PASSWORD=engine_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  # Redis (Cache)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

  # Nginx (Reverse Proxy - Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
      - engine
    restart: unless-stopped
    networks:
      - app-network

volumes:
  engine_data:
  postgres_data:
  redis_data:
  mongodb_data:
  ai_models:

networks:
  app-network:
    driver: bridge 