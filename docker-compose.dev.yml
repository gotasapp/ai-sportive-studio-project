version: '3.8'

services:
  # Frontend Next.js (opcional - pode usar o atual)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3000"  # Porta diferente para não conflitar
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000  # Usa backend atual
      - NEXT_PUBLIC_THIRDWEB_CLIENT_ID=${NEXT_PUBLIC_THIRDWEB_CLIENT_ID}
      - NEXT_PUBLIC_ENGINE_URL=http://localhost:3005  # Usa engine atual
    profiles:
      - optional  # Só roda se especificado
    networks:
      - app-network

  # Backend Python FastAPI (opcional - pode usar o atual)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8001:8000"  # Porta diferente para não conflitar
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MONGODB_URI=${MONGODB_URI}  # Usa MongoDB Atlas atual
      - CLOUDINARY_URL=${CLOUDINARY_URL}
      - PINATA_API_KEY=${PINATA_API_KEY}
      - PINATA_SECRET_KEY=${PINATA_SECRET_KEY}
    volumes:
      - ./api:/app/api
    profiles:
      - optional  # Só roda se especificado
    networks:
      - app-network

  # Thirdweb Engine (mantém configuração atual)
  engine:
    image: thirdweb/engine:latest
    ports:
      - "3005:3005"  # Mesma porta atual
    environment:
      - DATABASE_URL=postgresql://engine:engine_password@postgres:5432/engine
      - THIRDWEB_API_SECRET_KEY=${THIRDWEB_API_SECRET_KEY}
      - ENGINE_URL=http://localhost:3005
      - ADMIN_WALLET_ADDRESS=${ADMIN_WALLET_ADDRESS}
      - ACCESS_CONTROL_ALLOW_ORIGIN=*
      - ENABLE_HTTPS=false
      - LOG_LEVEL=debug
    depends_on:
      - postgres
    restart: unless-stopped
    volumes:
      - engine_data:/app/data
    networks:
      - app-network

  # PostgreSQL (para Thirdweb Engine)
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=engine
      - POSTGRES_USER=engine
      - POSTGRES_PASSWORD=engine_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  # Redis (opcional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

volumes:
  engine_data:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
